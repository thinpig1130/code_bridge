package com.itperson.controller;

import javax.servlet.http.HttpServletRequest;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.itperson.service.CoursesInfoService;
import com.itperson.service.ManagerQuestionRegistService;
import com.itperson.service.ManagerQuestionViewService;
import com.itperson.service.MyCoursesViewService;
import com.itperson.service.ReviewCursorService;
import com.itperson.service.ReviewListService;
import com.itperson.service.Service;
import com.itperson.service.StudyApplyService;
import com.itperson.service.StudyApplyUpdateService;
import com.itperson.service.StudyCursorService;
import com.itperson.service.StudyExitService;
import com.itperson.service.StudyRegistLogService;

@Controller
@RequestMapping(value = "/user")
public class UserController {
	@Autowired
	private SqlSession sqlSession;	
	
	/*----------------------------------- 학습현황 tab-------------------------------------- */
	@RequestMapping(value = "/status")
	public String userStatus( Model model, HttpServletRequest request) {
//		model.addAttribute("request", request);
//		MemberJoinService service = new MemberJoinService(sqlSession);
//		service.execute(model);
//		
		model.addAttribute("page_name", "학습현황");
		return "user/status";
	}
	
	/*----------------------------------- 학습하기 tab-------------------------------------- */
	@RequestMapping(value = "/study")
	public String userStudy( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new MyCoursesViewService(sqlSession);
		service.execute(model);
		model.addAttribute("page_name", "학습하기");
		return "user/study";
	}
	
	@RequestMapping(value = "/study/info")
	public String userStudyInfo( Model model, HttpServletRequest request) {
		Service service = new CoursesInfoService(sqlSession);
		service.execute(model);
		
		model.addAttribute("page_name", "학습 정보");
		return "user/study_info";
	}
	
	@RequestMapping(value = "/study/apply")
	public String userStudyApply( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new StudyApplyService(sqlSession);
		service.execute(model);
		return "redirect:/user/study";
	}
	
	@RequestMapping(value = "/study/hard")
	public String userStudyHard( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new StudyCursorService(sqlSession);
		service.execute(model);
		model.addAttribute("page_name", "나는 공부중이다!");
		return "user/study_hard";
	}
	
	@RequestMapping(value = "/study/close")
	public String userStudyClose( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new StudyExitService(sqlSession);
		service.execute(model);
		model.addAttribute("page_name", "나는 공부중이다!");
		return "user/close";
	}
	
	@RequestMapping(value = "/study/next")
	public String userStudyNext( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new StudyRegistLogService(sqlSession);
		service.execute(model);
		return "redirect:/user/study/hard";
	}
	
	@RequestMapping(value = "/study/apply_update")
	public String userStudyApplyUpdate( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new StudyApplyUpdateService(sqlSession);
		service.execute(model);
		return "redirect:/user/study";
	}
	
	/*----------------------------------- 문제풀기 tab-------------------------------------- */
	@RequestMapping(value = "/testing")
	public String userTesting( Model model, HttpServletRequest request) {
		
		model.addAttribute("page_name", "문제풀기");
		return "user/testing";
	}
	
	/*----------------------------------- 문제풀기 tab-------------------------------------- */
	@RequestMapping(value = "/review")
	public String userReview( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new ReviewListService(sqlSession);
		service.execute(model);		
		model.addAttribute("page_name", "추천 복습 목록");
		return "user/review";
	}
	
	@RequestMapping(value = "/review/hard")
	public String userReviewHard( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new ReviewCursorService(sqlSession);
		service.execute(model);		
		return "user/review_hard";
	}
	
	@RequestMapping(value = "/review/close")
	public String userReviewClose( Model model, HttpServletRequest request) {
		model.addAttribute("request", request);
		Service service = new StudyExitService(sqlSession);
		service.execute(model);
		model.addAttribute("page_name", "나는 공부중이다!");
		return "user/close";
	}
	
	/*----------------------------------- 관리자에게 문의 tab (재만) -------------------------------------- */
	//9월15일 재만 수정
	@RequestMapping(value = "/demands")
	public String userDemands( Model model, HttpServletRequest request) {
		ManagerQuestionViewService service = new ManagerQuestionViewService(sqlSession);
	    service.execute(model);
	    model.addAttribute("page_name", "관리자에게 문의");
	    return "user/demands";
	}
	
	@RequestMapping(value = "/demands_question")
	public String userDemandsQuestion( Model model, HttpServletRequest request) {
      
		model.addAttribute("page_name", "관리자에게 문의");
		return "user/demands_question";
	}
	
	//9월9일 재만수정 관리자 답변 테이블
   @RequestMapping(value = "/qnatable_manage")
   public String QnaTableManage( Model model, HttpServletRequest request) {
      
      model.addAttribute("page_name", "관리자용 QNA테이블");
      return "admin/qnatable_manage";
   }
   
 //9월9일 재만 수정 파라미터 처리
   @RequestMapping(value = "/demands_question/regist")   //폼의 액션과 맞출것
   public String userDemandsQuestionRegist( Model model, HttpServletRequest request) {
      model.addAttribute("request", request);
      //9월 10일 임포트 수정분 있음 확인
      ManagerQuestionRegistService service = new ManagerQuestionRegistService(sqlSession);
      service.execute(model);
      return "redirect:/user/demands";//리다이렉트 루트부터
   }
   
   //9월9일 재만 수정 관리자 에게문의하는 테이블
   @RequestMapping(value = "/qnatable_user")
   public String QnaTableUser( Model model, HttpServletRequest request) {
      
      model.addAttribute("page_name", "사용자용 QNA테이블");
      return "user/qnatable_user";
   }

}
